name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run databases
      run: |
        cd deployment/database
        docker compose up -d
    - name: Check Prometheus
      run: |
        chmod +x ./.github/workflows/check_health.sh
        ./.github/workflows/check_health.sh prometheus
#    - name: kill cAdvisor and node-exporter
#      run: |
#       cd deployment/controller
#       docker compose down
    - name: Check Mongo
      run: |
        ./.github/workflows/check_health.sh my-mongodb
    - name: Check Grafana
      run: |
        ./.github/workflows/check_health.sh my-mongodb
    - name: Run cAdvisor and node-exporter
      run: |
        cd deployment/controller
        docker compose up -d cadvisor node-exporter
    - name: Check cadvisor
      run: |
        ./.github/workflows/check_health.sh cadvisor
    - name: Check node-exporter
      run: |
        ./.github/workflows/check_health.sh node-exporter
#    - name: kill databases
 #     run: |
 #       cd deployment/database
 #       docker compose down
    - name: Run reporter
      run: |
        cd deployment/reporter/"kafka cluster"
        docker compose up -d
    - name: Check kafka
      run: |
        ./.github/workflows/check_health.sh kafka1
#    - name: kill reporter
#      run: |
#        cd deployment/reporter/"kafka cluster"
#        docker compose down
    - name: Run consumer
      run: |
        cd deployment/reporter/"kafka cluster"
        pip install -r requirements.txt
        nohup python consumer.py > output.log 2>&1 &
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          test-results/**/*.xml
          test-results/**/*.trx
          test-results/**/*.json
