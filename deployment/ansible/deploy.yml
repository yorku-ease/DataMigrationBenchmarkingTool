- hosts: databases
  tasks:
    - name: Infrastructure preparation 
      block:
        - name: remove current databases 
          shell: |
            cd /home/{{ ansible_user }}/dmbench/database
            docker compose down
            timestamp=$(date +%Y%m%d%H%M%S) 
            mkdir /home/{{ ansible_user }}/dmbench/backup
            sudo mv /home/{{ ansible_user }}/dmbench/database  "/home/{{ ansible_user }}/dmbench/backup/_backup_${timestamp}"
        - name: Clean up the target directory
          ansible.builtin.file:
            state: absent
            path: /home/{{ ansible_user }}/dmbench/database/
        - name: Copy entire folder with static and config files
          copy:
            src: ../database/
            dest: /home/{{ ansible_user }}/dmbench/database/
      tags : 
        - infrastructure
- hosts: reporter
  tasks:
    - name: Infrastructure preparation 
      block:
        - name: Clean up the target directory
          ansible.builtin.file:
            state: absent
            path: /home/{{ ansible_user }}/dmbench/reporter/
        - name: Copy entire folder with static and config files
          copy:
            src: ../reporter/
            dest: /home/{{ ansible_user }}/dmbench/reporter/
      tags:
        - infrastructure
- hosts: controller
  tasks:
    - name: Infrastructure preparation 
      block:
        - name: Clean up the target directory
          ansible.builtin.file:
            state: absent
            path: /home/{{ ansible_user }}/dmbench/controller/
        - name: Copy entire folder with static and config files
          copy:
            src: ../controller/
            dest: /home/{{ ansible_user }}/dmbench/controller/
      tags:
        - infrastructure
- hosts: databases
  tasks:
    - name: Configuration
      block:
        - name: Set up prometheus.yml
          template:
            src: ../database/prometheus.yml
            dest: /home/{{ ansible_user }}/dmbench/database/prometheus.yml
      tags : 
        - configuration
- hosts: databases
  vars_files:
    - config.yml  
  tasks:
    - name: Configuration
      block:
        - name: Set up docker-compose.yml
          template:
            src: ../database/docker-compose.yml
            dest: /home/{{ ansible_user }}/dmbench/database/docker-compose.yml
      tags : 
        - configuration
- hosts: reporter
  tasks:
    - name: Configuration
      block:
        - name: Set up docker-compose.yml
          template:
            src: ../reporter/kafkacluster/docker-compose.yml
            dest: /home/{{ ansible_user }}/dmbench/reporter/kafkacluster/docker-compose.yml
      tags : 
        - configuration
- hosts: reporter
  vars_files:
    - config.yml  
  tasks:
    - name: Configuration
      block:
        - name: Set up config.ini for logs parser
          template:
            src: ../reporter/logsParser/config.ini
            dest: /home/{{ ansible_user }}/dmbench/reporter/logsParser/config.ini
      tags : 
        - configuration
- hosts: databases
  vars_files:
    - config.yml 
  vars:
    container_names:
      - grafana
  tasks:
    - name: Databases deployment
      block:
        - name: Deploy Prometheus , MongoDb and Grafana
          shell: |
            cd /home/{{ ansible_user }}/dmbench/database
            docker compose down
            docker compose up -d
        - name: Install requests library needed for community.docker.docker_container_info 
          shell: |
            pip install requests
        - name: Check container health status
          community.docker.docker_container_info:
            name: grafana
          register: container_info
          until: >
            container_info and container_info.container.State.Health.Status == 'healthy'
          retries: 30
          delay: 10
          failed_when: >
            container_info.container.State.Health.Status not in ['healthy', 'starting']
          changed_when: false
      tags : 
        - deploy_db
- hosts: reporter
  tasks:
    - name: Kafka Cluster Deployment
      block:
        - name: Clean directory
          shell: |
            cd /home/{{ ansible_user }}/dmbench/reporter/kafkacluster
            docker compose down
            rm -f *.log
            chmod +x killConsumers.sh
            ./killConsumers.sh
        - name: Start Kafka Cluster
          shell: |
            cd /home/{{ ansible_user }}/dmbench/reporter/kafkacluster
            docker compose up -d
        - name: Install requests library needed for community.docker.docker_container_info 
          shell: |
            pip install requests
        - name: Check container health status
          community.docker.docker_container_info:
            name: kafka1
          register: container_info
          until: >
            container_info and container_info.container.State.Health.Status == 'healthy'
          retries: 30
          delay: 10
          failed_when: >
            container_info.container.State.Health.Status not in ['healthy', 'starting']
          changed_when: false
        - name: Start Kafka Consumers
          shell: |
            cd /home/{{ ansible_user }}/dmbench/reporter/kafkacluster
            nohup python3 -u consumer.py > consumperoutput.log 2>&1 & 
            nohup python3 -u resourcesConsumer.py  > resourceconsumperoutput.log 2>&1 & 
        - name: Wait for all log files to appear
          shell: |
            if [ -f /home/{{ ansible_user }}/dmbench/reporter/kafkacluster/performanceBenchmark.log ] && \
              [ -f /home/{{ ansible_user }}/dmbench/reporter/kafkacluster/framework.log ] && \
              [ -f /home/{{ ansible_user }}/dmbench/reporter/kafkacluster/migrationEngine.log ] && \
              [ -f /home/{{ ansible_user }}/dmbench/reporter/kafkacluster/cadvisor.log ]; then
              exit 0
            else
              exit 1
            fi
          register: retry_result
          until: retry_result.rc == 0
          retries: 60  # Number of retries
          delay: 10  # Delay between retries in seconds
          failed_when: false
          changed_when: false
      
      tags : 
        - pre_experiment

- hosts: controller
  tasks:
    - name: Run pre_experiment steps depending on the migration Engine
      block : 
        - name : Run pre_experiment steps for Db2
          ansible.builtin.include_tasks: 
            file: migrationengines/db2/pre_experiment.yml
            apply:
              tags:
                - pre_experiment
                - debug
          when:
            - '"db2" in ansible_run_tags'
          register: pre_experimentOutput
          tags : 
            - pre_experiment
            - debug
        - name: Output 
          debug:
            msg: "{{ pre_experimentOutput }}"
          when: pre_experimentOutput is defined
          tags:
            - pre_experiment